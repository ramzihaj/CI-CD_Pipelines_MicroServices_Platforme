# RBAC - Role-Based Access Control
# Rôles et permissions pour différents utilisateurs

---
# Developer Role - Accès limité au namespace microservices
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: developer
  namespace: microservices
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "services", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]

---
# DevOps Role - Accès complet pour déploiements
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: devops
  namespace: microservices
rules:
- apiGroups: ["", "apps", "batch", "extensions"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["*"]

---
# Read-Only Role - Accès lecture seule
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: viewer
  namespace: microservices
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]

---
# Service Account pour Backend
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-sa
  namespace: microservices

---
# Service Account pour Frontend
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-sa
  namespace: microservices

---
# Role pour Backend - Accès limité
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: backend-role
  namespace: microservices
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get"]
  resourceNames: ["backend-config", "postgres-secret"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get"]

---
# RoleBinding pour Backend
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backend-rolebinding
  namespace: microservices
subjects:
- kind: ServiceAccount
  name: backend-sa
  namespace: microservices
roleRef:
  kind: Role
  name: backend-role
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRole pour Monitoring
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-cluster-role
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
